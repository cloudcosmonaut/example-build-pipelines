trigger:
- none

pool:
  vmImage: 'macos-latest'

variables:
  acceptance:
    provisioning_profile: #Path to mobile provisioning profile in repository
    certSecureFile: #Name of secure file in azdo with private key DON'T store keyfile in repo! 
    certPwd: #Referece to password in KeyVault
    signingIdentity: #Apple Distribution Signing Identity
    profileId: #Apple distribution Profile Id
    serviceEndpoint: #Name of the service connection to AppStore Connect
    appIdentifier: #Bunlde identifier of your app
    releaseTrack: 'TestFlight'
    teamId: #Apple Developer Team Id
  production:
    provisioning_profile: #Path to mobile provisioning profile in repository
    certSecureFile: #Name of secure file in azdo with private key DON'T store keyfile in repo! 
    certPwd: #Referece to password in KeyVault
    signingIdentity: #Apple Distribution Signing Identity
    profileId: #Apple distribution Profile Id
    serviceEndpoint: #Name of the service connection to AppStore Connect
    appIdentifier: #Bunlde identifier of your app
    releaseTrack: 'Production'
    teamId: #Apple Developer Team Id

stages:
- stage: Acceptance
  jobs:
  - deployment: 'Acceptance'
    environment: 'Acceptance'
    strategy:
     runOnce:
       deploy:
         steps:
          - checkout: self
            
          - task: InstallAppleProvisioningProfile@1
            inputs:
              provisioningProfileLocation: 'sourceRepository'
              provProfileSourceRepository: '$(acceptance.provisioning_profile)'

          - task: InstallAppleCertificate@2
            inputs:
              certSecureFile: '$(acceptance.certSecureFile)'
              certPwd: '$(acceptance.certPwd)'
              keychain: 'temp'

          - task: NuGetToolInstaller@1

          - task: NuGetCommand@2
            inputs:
              command: 'restore'
              restoreSolution: '**/*.sln'
              feedsToUse: 'select'

          - task: XamariniOS@2
            inputs:
              solutionFile: '**/*.sln'
              configuration: 'Release'
              packageApp: true
              runNugetRestore: false
              signingIdentity: '$(acceptance.signingIdentity)'
              signingProvisioningProfileID: '$(acceptance.profileId)'
              args: '/p:PUBLISH_ACCEPTANCE=true'

          - task: AppStoreRelease@1
            inputs:
              serviceEndpoint: '$(acceptance.serviceConnectionName)'
              appIdentifier: '$(acceptance.appIdentifier)'
              appType: 'iOS'
              ipaPath: '**/*.ipa'
              releaseTrack: '$(acceptance.releaseTrack)'
              shouldSkipSubmission: false
              teamId: '$(acceptance.teamId)'

- stage: Production
  jobs:
  - deployment: 'Production'
    environment: 'Production'
    strategy:
     runOnce:
       deploy:
         steps:
          - checkout: self
          - task: InstallAppleProvisioningProfile@1
            inputs:
              provisioningProfileLocation: 'sourceRepository'
              provProfileSourceRepository: '$(production.provisioning_profile)'

          - task: InstallAppleCertificate@2
            inputs:
              certSecureFile: '$(production.certSecureFile)'
              certPwd: '$(production.certPwd)'
              keychain: 'temp'

          - task: NuGetToolInstaller@1

          - task: NuGetCommand@2
            inputs:
              command: 'restore'
              restoreSolution: '**/*.sln'
              feedsToUse: 'select'

          - task: XamariniOS@2
            inputs:
              solutionFile: '**/*.sln'
              configuration: 'Release'
              packageApp: true
              runNugetRestore: false
              signingIdentity: '$(production.serviceEndpoint)'
              signingProvisioningProfileID: '$(production.serviceEndpoint)'
              args: '/p:PUBLISH_RELEASE=true'

          - task: AppStoreRelease@1
            inputs:
              serviceEndpoint: '$(production.serviceEndpoint)'
              appIdentifier: '$(production.appIdentifier)'
              appType: 'iOS'
              ipaPath: '**/*.ipa'
              releaseTrack: '$(production.releaseTrack)'
              teamId: '$(production.teamId)'
        