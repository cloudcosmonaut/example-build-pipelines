trigger:
- none

pool:
  vmImage: 'macos-latest'

variables:
  buildConfiguration: 'Release'
  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'
  acceptance:
    apksignerKeystoreFile: # Reference to Secure file containing KeyStore DON'T put the Keystore in your repo!
    apksignerKeystorePassword: # Variable pointing the Keystore password in Azure KeyVault DON'T put the password in the pipeline!
    apksignerKeystoreAlias: # Alias name of Private Key in KeyStore
    apksignerKeyPassword: # Variable pointing the Key password in Azure KeyVault DON'T put the password in the pipeline!
    serviceConnection: #Name of the Service Connection to the Google Play Console
    track: 'internal'
  production:
    apksignerKeystoreFile: # Reference to Secure file containing KeyStore DON'T put the Keystore in your repo!
    apksignerKeystorePassword: # Variable pointing the Keystore password in Azure KeyVault DON'T put the password in the pipeline!
    apksignerKeystoreAlias: # Alias name of Private Key in KeyStore
    apksignerKeyPassword: # Variable pointing the Key password in Azure KeyVault DON'T put the password in the pipeline!
    serviceConnection: #Name of the Service Connection to the Google Play Console
    track: 'production'

stages:
- stage: Acceptance
  jobs:
  - deployment: 'Acceptance'
    environment: 'Acceptance'
    strategy:
     runOnce:
       deploy:
         steps:
          - checkout: self

          - task: NuGetToolInstaller@1

          - task: NuGetCommand@2
            inputs:
              restoreSolution: '**/*.sln'

          - task: XamarinAndroid@1
            inputs:
              projectFile: '**/*droid*.csproj'
              outputDirectory: '$(outputDirectory)'
              configuration: '$(buildConfiguration)'
              msbuildArguments: '/p:PUBLISH_ACCEPTANCE=true'
              
          - task: AndroidSigning@3
            inputs:
              apkFiles: '**/*.apk'
              apksignerKeystoreFile: '$(acceptance.apksignerKeystoreFile)'
              apksignerKeystorePassword: '$(acceptance.apksignerKeystorePassword)'
              apksignerKeystoreAlias: '$(acceptance.apksignerKeystoreAlias)'
              apksignerKeyPassword: '$(acceptance.apksignerKeyPassword)'

          - task: GooglePlayRelease@3
            inputs:
              serviceConnection: '$(acceptance.serviceConnection)'
              apkFile: '**/*.apk' 
              track: '$(acceptance.track)'
              
- stage: Production
  jobs:
  - deployment: 'Production'
    environment: 'Production'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: NuGetToolInstaller@1

          - task: NuGetCommand@2
            inputs:
              restoreSolution: '**/*.sln'

          - task: XamarinAndroid@1
            inputs:
              projectFile: '**/*droid*.csproj'
              outputDirectory: '$(outputDirectory)'
              configuration: '$(buildConfiguration)'
              msbuildArguments: '/p:PUBLISH_RELEASE=true'

          - task: AndroidSigning@3
            inputs:
              apkFiles: '**/*.apk'
              apksignerKeystoreFile: '$(production.apksignerKeystoreFile)'
              apksignerKeystorePassword: '$(production.apksignerKeystorePassword)'
              apksignerKeystoreAlias: '$(production.apksignerKeystoreAlias)'
              apksignerKeyPassword: '$(production.apksignerKeyPassword)'

          - task: GooglePlayRelease@3
            inputs:
              serviceConnection: '$(acceptance.serviceConnection)'
              apkFile: '**/*.apk' 
              track: '$(production.apksignerKeyPassword)'
